{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\nfunction CsvLoader({\n  onDataLoaded\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Update the path to your CSV file\n    Papa.parse('/Counties for Texas Agricultural Statistical Districts.csv', {\n      download: true,\n      header: true,\n      // Assumes the CSV has headers\n      complete: results => {\n        console.log('Parsed CSV Results:', results); // Log full parse results\n        console.log('Parsed CSV Data:', results.data); // Log just the data array\n        setData(results.data); // Store parsed data\n        onDataLoaded(results.data); // Pass data to parent component\n      },\n      error: error => {\n        console.error('Error parsing CSV:', error); // Log parsing errors\n      }\n    });\n  }, []);\n  return null;\n}\n_s(CsvLoader, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = CsvLoader;\nexport default CsvLoader;\nvar _c;\n$RefreshReg$(_c, \"CsvLoader\");","map":{"version":3,"names":["React","useEffect","useState","Papa","CsvLoader","onDataLoaded","_s","data","setData","parse","download","header","complete","results","console","log","error","_c","$RefreshReg$"],"sources":["/Users/sarahsfolder/Documents/crop-rotation-app/src/components/CsvLoader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Papa from 'papaparse';\n\nfunction CsvLoader({ onDataLoaded }) {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        // Update the path to your CSV file\n        Papa.parse('/Counties for Texas Agricultural Statistical Districts.csv', {\n            download: true,\n            header: true,  // Assumes the CSV has headers\n            complete: (results) => {\n                console.log('Parsed CSV Results:', results);  // Log full parse results\n                console.log('Parsed CSV Data:', results.data);  // Log just the data array\n                setData(results.data);  // Store parsed data\n                onDataLoaded(results.data);  // Pass data to parent component\n            },\n            error: (error) => {\n                console.error('Error parsing CSV:', error);  // Log parsing errors\n            },\n        });\n    }, []);\n\n    return null;\n}\n\nexport default CsvLoader;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,WAAW;AAE5B,SAASC,SAASA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ;IACAE,IAAI,CAACM,KAAK,CAAC,4DAA4D,EAAE;MACrEC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,IAAI;MAAG;MACfC,QAAQ,EAAGC,OAAO,IAAK;QACnBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,OAAO,CAAC,CAAC,CAAE;QAC9CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,OAAO,CAACN,IAAI,CAAC,CAAC,CAAE;QAChDC,OAAO,CAACK,OAAO,CAACN,IAAI,CAAC,CAAC,CAAE;QACxBF,YAAY,CAACQ,OAAO,CAACN,IAAI,CAAC,CAAC,CAAE;MACjC,CAAC;MACDS,KAAK,EAAGA,KAAK,IAAK;QACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC,CAAE;MACjD;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACf;AAACV,EAAA,CArBQF,SAAS;AAAAa,EAAA,GAATb,SAAS;AAuBlB,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}