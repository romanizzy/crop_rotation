{"ast":null,"code":"var _jsxFileName = \"/Users/sarahsfolder/Documents/crop-rotation-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CountyInput from './components/CountyInput';\nimport CropRecommendations from './components/CropRecommendations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [crops, setCrops] = useState([]);\n  const handleSubmit = (county, currentCrop) => {\n    // Mock data - replace with actual API or database logic\n    const recommendedCrops = [{\n      id: 1,\n      name: 'Tomatoes',\n      plantingSeason: 'May',\n      harvestSeason: 'September'\n    }, {\n      id: 2,\n      name: 'Squash',\n      plantingSeason: 'May',\n      harvestSeason: 'July'\n    }, {\n      id: 3,\n      name: 'Peppers',\n      plantingSeason: 'June',\n      harvestSeason: 'August'\n    }];\n    setCrops(recommendedCrops); // Set the recommended crops\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crop Rotation Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountyInput, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CropRecommendations, {\n      crops: crops\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Az5Thh95SFXpFJW0MqECwnpcYHo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CountyInput","CropRecommendations","jsxDEV","_jsxDEV","App","_s","crops","setCrops","handleSubmit","county","currentCrop","recommendedCrops","id","name","plantingSeason","harvestSeason","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/sarahsfolder/Documents/crop-rotation-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CountyInput from './components/CountyInput';\nimport CropRecommendations from './components/CropRecommendations';\n\nfunction App() {\n  const [crops, setCrops] = useState([]);\n\n  const handleSubmit = (county, currentCrop) => {\n    // Mock data - replace with actual API or database logic\n    const recommendedCrops = [\n      { id: 1, name: 'Tomatoes', plantingSeason: 'May', harvestSeason: 'September' },\n      { id: 2, name: 'Squash', plantingSeason: 'May', harvestSeason: 'July' },\n      { id: 3, name: 'Peppers', plantingSeason: 'June', harvestSeason: 'August' },\n    ];\n\n    setCrops(recommendedCrops); // Set the recommended crops\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crop Rotation Planner</h1>\n      <CountyInput onSubmit={handleSubmit} />\n      <CropRecommendations crops={crops} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,mBAAmB,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;IAC5C;IACA,MAAMC,gBAAgB,GAAG,CACvB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,cAAc,EAAE,KAAK;MAAEC,aAAa,EAAE;IAAY,CAAC,EAC9E;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,cAAc,EAAE,KAAK;MAAEC,aAAa,EAAE;IAAO,CAAC,EACvE;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEC,cAAc,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAS,CAAC,CAC5E;IAEDR,QAAQ,CAACI,gBAAgB,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BlB,OAAA,CAACH,WAAW;MAACsB,QAAQ,EAAEd;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvClB,OAAA,CAACF,mBAAmB;MAACK,KAAK,EAAEA;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAChB,EAAA,CArBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}