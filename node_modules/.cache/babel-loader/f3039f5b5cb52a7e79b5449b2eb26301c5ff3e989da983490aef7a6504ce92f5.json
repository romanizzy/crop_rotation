{"ast":null,"code":"var _jsxFileName = \"/Users/sarahsfolder/Documents/crop-rotation-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CountyInput from './components/CountyInput';\nimport CropRecommendations from './components/CropRecommendations';\nimport CsvLoader from './components/CsvLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [crops, setCrops] = useState([]);\n  const [allCrops, setAllCrops] = useState([]);\n  const handleSubmit = (county, currentCrop) => {\n    // Filter the crops based on county or current crop logic\n    const recommendedCrops = allCrops.filter(crop => crop.region === 'Northern High Plains'); // Example filter\n    setCrops(recommendedCrops); // Set filtered crops\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crop Rotation Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CsvLoader, {\n      onDataLoaded: setAllCrops\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountyInput, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CropRecommendations, {\n      crops: crops\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/mdyVkyZeYCMqWo+SSKaW/nCeqc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CountyInput","CropRecommendations","CsvLoader","jsxDEV","_jsxDEV","App","_s","crops","setCrops","allCrops","setAllCrops","handleSubmit","county","currentCrop","recommendedCrops","filter","crop","region","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataLoaded","onSubmit","_c","$RefreshReg$"],"sources":["/Users/sarahsfolder/Documents/crop-rotation-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport CountyInput from './components/CountyInput';\nimport CropRecommendations from './components/CropRecommendations';\nimport CsvLoader from './components/CsvLoader';\n\nfunction App() {\n  const [crops, setCrops] = useState([]);\n  const [allCrops, setAllCrops] = useState([]);\n\n  const handleSubmit = (county, currentCrop) => {\n    // Filter the crops based on county or current crop logic\n    const recommendedCrops = allCrops.filter(crop => crop.region === 'Northern High Plains'); // Example filter\n    setCrops(recommendedCrops); // Set filtered crops\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Crop Rotation Planner</h1>\n      <CsvLoader onDataLoaded={setAllCrops} />\n      <CountyInput onSubmit={handleSubmit} />\n      <CropRecommendations crops={crops} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,YAAY,GAAGA,CAACC,MAAM,EAAEC,WAAW,KAAK;IAC5C;IACA,MAAMC,gBAAgB,GAAGL,QAAQ,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,sBAAsB,CAAC,CAAC,CAAC;IAC1FT,QAAQ,CAACM,gBAAgB,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEV,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BnB,OAAA,CAACF,SAAS;MAACsB,YAAY,EAAEd;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCnB,OAAA,CAACJ,WAAW;MAACyB,QAAQ,EAAEd;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCnB,OAAA,CAACH,mBAAmB;MAACM,KAAK,EAAEA;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACjB,EAAA,CAlBQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}